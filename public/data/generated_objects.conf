define host {
    host_name laptop
    alias Arek's laptop
    address 192.168.199.2
    check_command check-host-alive
    notification_period always
    # everything else from configuration
    initial_state   o check_interval  5.000000 retry_interval  1.000000 max_check_attempts  10 active_checks_enabled   1 passive_checks_enabled  1 obsess_over_host    1 event_handler_enabled   1 low_flap_threshold  0.000000 high_flap_threshold 0.000000 flap_detection_enabled  1 flap_detection_options  o,d,u freshness_threshold 0 check_freshness 0 notification_options    d,u,r notifications_enabled   1 notification_interval   0.000000 first_notification_delay    0.000000 stalking_options    n process_perf_data   1 failure_prediction_enabled  1 retain_status_information   1 retain_nonstatus_information    1 
}
define host {
    host_name router
    alias Wireless router
    address 192.168.199.1
    check_command check-host-alive
    notification_period always
    # everything else from configuration
    initial_state   o check_interval  5.000000 retry_interval  1.000000 max_check_attempts  10 active_checks_enabled   1 passive_checks_enabled  1 obsess_over_host    1 event_handler_enabled   1 low_flap_threshold  0.000000 high_flap_threshold 0.000000 flap_detection_enabled  1 flap_detection_options  o,d,u freshness_threshold 0 check_freshness 0 notification_options    d,u,r notifications_enabled   1 notification_interval   0.000000 first_notification_delay    0.000000 stalking_options    n process_perf_data   1 failure_prediction_enabled  1 retain_status_information   1 retain_nonstatus_information    1 
}
define service {
    service_description SSH
    host_group computers
    contact_group users,admins
    check_command check_ssh
    notification_period always
    # everything else from configuration
    initial_state   o check_interval  5.000000 retry_interval  1.000000 max_check_attempts  4 is_volatile 0 parallelize_check   1 active_checks_enabled   1 passive_checks_enabled  1 obsess_over_service 1 event_handler_enabled   1 low_flap_threshold  0.000000 high_flap_threshold 0.000000 flap_detection_enabled  1 flap_detection_options  o,w,u,c freshness_threshold 0 check_freshness 0 notification_options    u,w,c,r notifications_enabled   1 notification_interval   0.000000 first_notification_delay    0.000000 stalking_options    n process_perf_data   1 failure_prediction_enabled  1 retain_status_information   1 retain_nonstatus_information    1 
    }
define service {
    service_description PING
    host_group computers,network_devices
    contact_group users,admins
    check_command check_ping
    notification_period always
    # everything else from configuration
    initial_state   o check_interval  5.000000 retry_interval  1.000000 max_check_attempts  4 is_volatile 0 parallelize_check   1 active_checks_enabled   1 passive_checks_enabled  1 obsess_over_service 1 event_handler_enabled   1 low_flap_threshold  0.000000 high_flap_threshold 0.000000 flap_detection_enabled  1 flap_detection_options  o,w,u,c freshness_threshold 0 check_freshness 0 notification_options    u,w,c,r notifications_enabled   1 notification_interval   0.000000 first_notification_delay    0.000000 stalking_options    n process_perf_data   1 failure_prediction_enabled  1 retain_status_information   1 retain_nonstatus_information    1 
    }
define command {
    command_name    notify-host-by-sms
    command_line    echo "[TODO] command need to be defined"
}
define command {
    command_name    check_ping
    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
}
define command {
    command_name    notify-host-by-email
    command_line    /usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOST
}
define command {
    command_name    check_ssh
    command_line    $USER1$/check_ssh $ARG1$ $HOSTADDRESS$
}
define command {
    command_name    check-host-alive
    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
}
define command {
    command_name    notify-service-by-sms
    command_line    echo "[TODO] command need to be defined"
}
define command {
    command_name    notify-service-by-email
    command_line    /usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$" | /usr/bin/m
}
define timeperiod {
    timeperiod_name always
    alias Always (24x7)
    sunday          00:00-24:00 monday          00:00-24:00 tuesday         00:00-24:00 wednesday       00:00-24:00 thursday        00:00-24:00 friday          00:00-24:00 saturday        00:00-24:00 
}
define timeperiod {
    timeperiod_name never
    alias Never
    
}
define contactgroup {
    contactgroup_name   admins
    alias   Admins 
    members arek_turlewicz,lei
}
define contactgroup {
    contactgroup_name   users
    alias   Users 
    members arek_turlewicz,jan_kowalski
}
define hostgroup {
    hostgroup_name   computers
    alias   Computers 
    members laptop
}
define hostgroup {
    hostgroup_name   network_devices
    alias   Network devices 
    members router
}
